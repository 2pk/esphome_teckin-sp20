# Tasmota Teckin SP20 (USA model) from "/sonoff/sonoff_template.h" - https://github.com/arendst/Sonoff-Tasmota
# { "Teckin US",       // Teckin SP20 US with Energy Monitoring
#                       // https://www.amazon.com/Outlet-Compatible-Monitoring-Function-Required/dp/B079Q5W22B
#                       // https://www.amazon.com/Outlet-ZOOZEE-Monitoring-Function-Compatible/dp/B07J2LR5KN
#     GPIO_LED2_INV,    // GPIO00 Red Led (1 = On, 0 = Off) - Power status
#     0,
#     GPIO_LED1_INV,    // GPIO02 Blue Led (1 = On, 0 = Off) - Link status
#     0,
#     GPIO_REL1,        // GPIO04 Relay (0 = Off, 1 = On)
#     GPIO_HJL_CF,      // GPIO05 BL0937 or HJL-01 CF power
#                       // GPIO06 (SD_CLK   Flash)
#                       // GPIO07 (SD_DATA0 Flash QIO/DIO/DOUT)
#                       // GPIO08 (SD_DATA1 Flash QIO/DIO/DOUT)
#     0,                // GPIO09 (SD_DATA2 Flash QIO or ESP8285)
#     0,                // GPIO10 (SD_DATA3 Flash QIO or ESP8285)
#                       // GPIO11 (SD_CMD   Flash)
#     GPIO_NRG_SEL_INV, // GPIO12 BL0937 or HJL-01 Sel output (0 = Voltage)
#     GPIO_KEY1,        // GPIO13 Button
#     GPIO_NRG_CF1,     // GPIO14 BL0937 or HJL-01 CF1 current / voltage
#     0, 0, 0
#   }


# https://esphome.io


substitutions:
  # https://esphome.io/guides/configuration-types.html#substitutions
  device_name: teckin_sp20
  friendly_name: Teckin SP20
  ip_address: !secret teckin_sp20_ip


esphome:
  # https://esphome.io/components/esphomeyaml
  name: ${device_name}
  platform: ESP8266
  board: esp01_1m


wifi:
  # https://esphome.io/components/wifi
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  manual_ip:
    static_ip: ${ip_address}
    gateway: !secret wifi_gateway
    subnet: !secret wifi_subnet
    dns1: !secret wifi_dns1

    
# web_server:
#   port: 80
  # https://esphomelib.com/esphomeyaml/components/web_server.html
  

logger:
  # https://esphome.io/components/logger


api:
  password: !secret esphome_api_password
  # https://esphome.io/components/api
  

ota:
  password: !secret esphome_ota_password
  # https://esphome.io/components/ota
  


sensor:
  - platform: hlw8012
    # https://esphome.io/components/sensor/hlw8012.html
    # current, power, voltage can all use sensor options https://esphome.io/components/sensor/#config-sensor
    sel_pin: 
      number: GPIO12
      inverted: True
    cf_pin: GPIO5
    cf1_pin: GPIO14
    current:
      name: $friendly_name Current
    power:
      name: $friendly_name Power
      filters:
        - lambda: return x / 2.2;
    voltage:
      name: $friendly_name Voltage
    current_resistor: 0.001  # default 0.001
    voltage_divider: 910  # default 2351
    change_mode_every: 3  # default 8
    update_interval: 3s  # default 60s


status_led:
  # https://esphome.io/components/status_led
  pin:
    number: GPIO0
    inverted: True


output:
  # https://esphome.io/components/output/esp8266_pwm.html
  - platform: esp8266_pwm
    id: blue_led_output
    pin:
      number: GPIO2
      inverted: True


light:
  # https://esphome.io/components/light/monochromatic.html
  - platform: monochromatic
    name: $friendly_name Blue LED
    output: blue_led_output
    id: blue_led
    default_transition_length: 1ms # default 1s
    internal: True


binary_sensor:
  - platform: gpio
    # https://esphome.io/components/binary_sensor/gpio.html
    pin:
      number: GPIO13
    id: button
    name: $friendly_name Button
    on_press:
      - switch.toggle: relay_template
    internal: True
      

switch:
  - platform: gpio
    # https://esphome.io/components/switch/gpio
    pin: GPIO4
    id: relay

  # tie the led & relay operation together and report status based on relay state   
  - platform: template
    # https://esphome.io/components/switch/template.html
    name: $friendly_name Relay
    id: relay_template
    lambda: |-
      if (id(relay).state) {
        return true;
      } else {
        return false;
      }
    turn_on_action:
      - light.turn_on: blue_led
      - switch.turn_on: relay
    turn_off_action:
      - light.turn_off: blue_led
      - switch.turn_off: relay
    # optimistic: true # this will change the toggle switch to individual on/off buttons
